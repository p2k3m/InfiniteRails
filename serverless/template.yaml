AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >-
  Serverless backend for Infinite Dimension providing Google-authenticated user sync and a DynamoDB-backed scoreboard.

Globals:
  Function:
    Runtime: nodejs18.x
    Timeout: 10
    MemorySize: 256
    Environment:
      Variables:
        USERS_TABLE: !Ref UsersTable
        SCORES_TABLE: !Ref ScoresTable
        SCORES_INDEX_NAME: ScoreIndex

Resources:
  AssetsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - "*"
            AllowedMethods:
              - GET
              - HEAD
            AllowedOrigins:
              - "*"
            MaxAge: 86400
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled

  AssetsCloudFrontOAI:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: Read-only access for Infinite Rails assets distribution

  AssetsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref AssetsBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: AllowCloudFrontOriginAccessIdentityRead
            Effect: Allow
            Principal:
              CanonicalUser: !GetAtt AssetsCloudFrontOAI.S3CanonicalUserId
            Action:
              - s3:GetObject
            Resource:
              - !Sub "${AssetsBucket.Arn}/assets/*"
              - !Sub "${AssetsBucket.Arn}/textures/*"
              - !Sub "${AssetsBucket.Arn}/audio/*"

  AssetsResponseHeadersPolicy:
    Type: AWS::CloudFront::ResponseHeadersPolicy
    Properties:
      ResponseHeadersPolicyConfig:
        Name: AssetsResponseHeaders
        Comment: CORS headers for Infinite Rails assets distribution
        CorsConfig:
          AccessControlAllowCredentials: false
          AccessControlAllowHeaders:
            Items:
              - "*"
          AccessControlAllowMethods:
            Items:
              - GET
              - HEAD
              - OPTIONS
          AccessControlAllowOrigins:
            Items:
              - "*"
          OriginOverride: true

  AssetsMimeTypeFunction:
    Type: AWS::CloudFront::Function
    Properties:
      Name: !Sub "${AWS::StackName}-assets-mime"
      AutoPublish: true
      FunctionConfig:
        Comment: Ensure MIME and CORS headers for static assets
        Runtime: cloudfront-js-1.0
      FunctionCode: |
        function handler(event) {
          var response = event.response || {};
          var headers = response.headers || {};
          var request = event.request || {};
          var uri = (request.uri || '').toLowerCase();

          var mimeMap = {
            '.gltf': 'model/gltf+json',
            '.png': 'image/png',
            '.mp3': 'audio/mpeg',
            '.js': 'application/javascript'
          };

          var matched = null;
          for (var ext in mimeMap) {
            if (uri.endsWith(ext)) {
              matched = ext;
              break;
            }
          }

          if (matched) {
            var contentType = mimeMap[matched];
            if (!headers['content-type'] || headers['content-type'].value !== contentType) {
              headers['content-type'] = { value: contentType };
            }
          }

          headers['access-control-allow-origin'] = { value: '*' };

          response.headers = headers;
          return response;
        }

  AssetsDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: true
        DefaultRootObject: index.html
        HttpVersion: http2
        PriceClass: PriceClass_All
        Origins:
          - DomainName: !GetAtt AssetsBucket.RegionalDomainName
            Id: AssetsS3Origin
            S3OriginConfig:
              OriginAccessIdentity: !Sub "origin-access-identity/cloudfront/${AssetsCloudFrontOAI}"
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          CachedMethods:
            - GET
            - HEAD
          CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6 # Managed-CachingOptimized
          Compress: true
          OriginRequestPolicyId: b689b0a8-53d0-40ab-baf2-68738e2966ac # Managed-CORS-S3Origin
          ResponseHeadersPolicyId: !Ref AssetsResponseHeadersPolicy
          FunctionAssociations:
            - EventType: viewer-response
              FunctionARN: !GetAtt AssetsMimeTypeFunction.FunctionARN
          TargetOriginId: AssetsS3Origin
          ViewerProtocolPolicy: redirect-to-https

  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Cors:
        AllowMethods: "'OPTIONS,GET,POST'"
        AllowHeaders: "'Content-Type,Authorization,X-Requested-With'"
        AllowOrigin: "'*'"

  UsersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: googleId
          AttributeType: S
      KeySchema:
        - AttributeName: googleId
          KeyType: HASH
      SSESpecification:
        SSEEnabled: true

  ScoresTable:
    Type: AWS::DynamoDB::Table
    Properties:
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: googleId
          AttributeType: S
        - AttributeName: scoreBucket
          AttributeType: S
        - AttributeName: scoreSort
          AttributeType: N
      KeySchema:
        - AttributeName: googleId
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: ScoreIndex
          KeySchema:
            - AttributeName: scoreBucket
              KeyType: HASH
            - AttributeName: scoreSort
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
      SSESpecification:
        SSEEnabled: true

  UsersFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: handlers/users.handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UsersTable
      Events:
        PostUser:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /users
            Method: post
        GetUser:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /users
            Method: get
        OptionsUser:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /users
            Method: options

  ScoresFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: handlers/scores.handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ScoresTable
      Events:
        GetScores:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /scores
            Method: get
        PostScore:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /scores
            Method: post
        OptionsScores:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /scores
            Method: options

Outputs:
  AssetsBucketName:
    Description: S3 bucket that stores Infinite Rails static assets.
    Value: !Ref AssetsBucket
  AssetsDistributionId:
    Description: CloudFront distribution serving the Infinite Rails assets bucket.
    Value: !Ref AssetsDistribution
  AssetsDistributionDomainName:
    Description: Domain name for the Infinite Rails assets CloudFront distribution.
    Value: !GetAtt AssetsDistribution.DomainName
  ApiEndpoint:
    Description: Invoke URL for the Infinite Dimension API Gateway stage.
    Value: !Sub 'https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/Prod'
  UsersTableName:
    Description: DynamoDB table storing Google-linked explorer profiles.
    Value: !Ref UsersTable
  ScoresTableName:
    Description: DynamoDB table storing multiverse scoreboard entries.
    Value: !Ref ScoresTable
